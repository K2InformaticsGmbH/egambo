-module(egambo_tictac_win).

-export([ gen/3     % generate non-periodic wins
        , win/5     % check for win on non-periodic board
        ]).

idx(W, H, X, Y) -> (X+W) rem W + W*((Y+H) rem H). 

gen_skip(Pos) -> list_to_binary([$_,$:] ++ integer_to_list(8*Pos) ++ [$,,32]).

gen_render(W,H,R,L) -> 
    WW = W + $0,
    HH = H + $0,
    RR = R + $0,
    Pat = gen_pattern(W,H,R,-1,L,[]),
    <<"win_", WW:8, HH:8, RR:8, "(<<", Pat/binary, "_/binary>>, P) -> true;\n">>.

gen_render_else(W, H, R) ->
    WW = W + $0,
    HH = H + $0,
    RR = R + $0,
    <<"win_", WW:8, HH:8, RR:8, "(_, _) -> false.\n">>.

gen_pattern(_, _, _, _, [], Acc) -> list_to_binary(lists:reverse(Acc));
gen_pattern(W, H, R, Last, [Next|Rest], Acc) when Next==Last+1 -> 
    gen_pattern(W, H, R, Next, Rest, [<<"P:8, ">>|Acc]);     % no skip
gen_pattern(W, H, R, Last, [Next|Rest], Acc) -> 
    gen_pattern(W, H, R, Next, Rest, [<<"P:8, ">>, gen_skip(Next-Last-1) |Acc]).

gen(W,H,R) -> 
    io:format("~s~s~n",[ 
        list_to_binary(
          [ gen_render(W,H,R,L) 
            || 
            L <-  lists:usort(gen_hor(W, H, R) ++ gen_ver(W, H, R) ++ gen_bck(W, H, R) ++ gen_fwd(W, H, R))
          ]
        )
      , gen_render_else(W, H, R)
    ]).

gen_hor(W, H, R) -> 
    lists:usort([g_hor(W, H, R, X, Y) || Y <- lists:seq(0,H-1), X <- lists:seq(0,W-R)]). 

g_hor(W, H, R, X, Y) ->
    lists:usort([idx(W, H, X+O, Y) || O <- lists:seq(0,R-1)]).

gen_ver(W, H, R) ->  
    lists:usort([g_ver(W, H, R, X, Y) || Y <- lists:seq(0,H-R), X <- lists:seq(0,W-1)]). 

g_ver(W, H, R, X, Y) ->
    lists:usort([idx(W, H, X, Y+O) || O <- lists:seq(0,R-1)]).

gen_bck(W, H, R) -> 
    lists:usort([g_bck(W, H, R, X, Y) || Y <- lists:seq(0,H-R), X <- lists:seq(R-1,W-1)]). 

g_bck(W, H, R, X, Y) ->
    lists:usort([idx(W, H, X-O, Y+O) || O <- lists:seq(0,R-1)]).

gen_fwd(W, H, R) -> 
    lists:usort([g_fwd(W, H, R, X, Y) || Y <- lists:seq(0,H-R), X <- lists:seq(0,W-R)]). 

g_fwd(W, H, R, X, Y) ->
    lists:usort([idx(W, H, X+O, Y+O) || O <- lists:seq(0,R-1)]).

-spec win(Board::binary(), Width::integer(), Height::integer(), Run::integer(), Player::integer()) -> boolean().
win(Board, 3, 3, 3, Player) -> win_333(Board, Player);
win(Board, 4, 4, 3, Player) -> win_443(Board, Player);
win(Board, 4, 4, 4, Player) -> win_444(Board, Player);
win(Board, 5, 4, 4, Player) -> win_544(Board, Player);
win(Board, 5, 5, 4, Player) -> win_554(Board, Player);
win(Board, 5, 5, 5, Player) -> win_555(Board, Player);
win(Board, 6, 4, 4, Player) -> win_644(Board, Player);
win(Board, 6, 5, 4, Player) -> win_654(Board, Player);
win(Board, 6, 5, 5, Player) -> win_655(Board, Player);
win(Board, 6, 6, 4, Player) -> win_664(Board, Player);
win(Board, 6, 6, 5, Player) -> win_665(Board, Player);
win(Board, 6, 6, 6, Player) -> win_666(Board, Player);
win(Board, 7, 4, 4, Player) -> win_744(Board, Player);
win(Board, 7, 5, 4, Player) -> win_754(Board, Player);
win(Board, 7, 5, 5, Player) -> win_755(Board, Player);
win(Board, 7, 6, 4, Player) -> win_764(Board, Player);
win(Board, 7, 6, 5, Player) -> win_765(Board, Player);
win(Board, 7, 6, 6, Player) -> win_766(Board, Player);
win(Board, 7, 7, 5, Player) -> win_775(Board, Player);
win(Board, 7, 7, 6, Player) -> win_776(Board, Player);
win(Board, 7, 7, 7, Player) -> win_777(Board, Player);
win(Board, 8, 5, 5, Player) -> win_855(Board, Player);
win(Board, 8, 6, 5, Player) -> win_865(Board, Player);
win(Board, 8, 6, 6, Player) -> win_866(Board, Player);
win(Board, 8, 7, 5, Player) -> win_875(Board, Player);
win(Board, 8, 7, 6, Player) -> win_876(Board, Player);
win(Board, 8, 7, 7, Player) -> win_877(Board, Player);
win(Board, 8, 8, 5, Player) -> win_885(Board, Player);
win(Board, 8, 8, 6, Player) -> win_886(Board, Player);
win(Board, 8, 8, 7, Player) -> win_887(Board, Player);
win(Board, 8, 8, 8, Player) -> win_888(Board, Player);
win(_Board, _Width, _Height, _Run, _Player) -> false. % TODO: implement all board sizes

win_333(<<P:8, P:8, P:8, _/binary>>, P) -> true;
win_333(<<P:8, _:16, P:8, _:16, P:8, _/binary>>, P) -> true;
win_333(<<P:8, _:24, P:8, _:24, P:8, _/binary>>, P) -> true;
win_333(<<_:8, P:8, _:16, P:8, _:16, P:8, _/binary>>, P) -> true;
win_333(<<_:16, P:8, _:8, P:8, _:8, P:8, _/binary>>, P) -> true;
win_333(<<_:16, P:8, _:16, P:8, _:16, P:8, _/binary>>, P) -> true;
win_333(<<_:24, P:8, P:8, P:8, _/binary>>, P) -> true;
win_333(<<_:48, P:8, P:8, P:8, _/binary>>, P) -> true;
win_333(_, _) -> false.

win_443(<<P:8, P:8, P:8, _/binary>>, P) -> true;
win_443(<<P:8, _:24, P:8, _:24, P:8, _/binary>>, P) -> true;
win_443(<<P:8, _:32, P:8, _:32, P:8, _/binary>>, P) -> true;
win_443(<<_:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_443(<<_:8, P:8, _:24, P:8, _:24, P:8, _/binary>>, P) -> true;
win_443(<<_:8, P:8, _:32, P:8, _:32, P:8, _/binary>>, P) -> true;
win_443(<<_:16, P:8, _:16, P:8, _:16, P:8, _/binary>>, P) -> true;
win_443(<<_:16, P:8, _:24, P:8, _:24, P:8, _/binary>>, P) -> true;
win_443(<<_:24, P:8, _:16, P:8, _:16, P:8, _/binary>>, P) -> true;
win_443(<<_:24, P:8, _:24, P:8, _:24, P:8, _/binary>>, P) -> true;
win_443(<<_:32, P:8, P:8, P:8, _/binary>>, P) -> true;
win_443(<<_:32, P:8, _:24, P:8, _:24, P:8, _/binary>>, P) -> true;
win_443(<<_:32, P:8, _:32, P:8, _:32, P:8, _/binary>>, P) -> true;
win_443(<<_:40, P:8, P:8, P:8, _/binary>>, P) -> true;
win_443(<<_:40, P:8, _:24, P:8, _:24, P:8, _/binary>>, P) -> true;
win_443(<<_:40, P:8, _:32, P:8, _:32, P:8, _/binary>>, P) -> true;
win_443(<<_:48, P:8, _:16, P:8, _:16, P:8, _/binary>>, P) -> true;
win_443(<<_:48, P:8, _:24, P:8, _:24, P:8, _/binary>>, P) -> true;
win_443(<<_:56, P:8, _:16, P:8, _:16, P:8, _/binary>>, P) -> true;
win_443(<<_:56, P:8, _:24, P:8, _:24, P:8, _/binary>>, P) -> true;
win_443(<<_:64, P:8, P:8, P:8, _/binary>>, P) -> true;
win_443(<<_:72, P:8, P:8, P:8, _/binary>>, P) -> true;
win_443(<<_:96, P:8, P:8, P:8, _/binary>>, P) -> true;
win_443(<<_:104, P:8, P:8, P:8, _/binary>>, P) -> true;
win_443(_, _) -> false.

win_444(<<P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_444(<<P:8, _:24, P:8, _:24, P:8, _:24, P:8, _/binary>>, P) -> true;
win_444(<<P:8, _:32, P:8, _:32, P:8, _:32, P:8, _/binary>>, P) -> true;
win_444(<<_:8, P:8, _:24, P:8, _:24, P:8, _:24, P:8, _/binary>>, P) -> true;
win_444(<<_:16, P:8, _:24, P:8, _:24, P:8, _:24, P:8, _/binary>>, P) -> true;
win_444(<<_:24, P:8, _:16, P:8, _:16, P:8, _:16, P:8, _/binary>>, P) -> true;
win_444(<<_:24, P:8, _:24, P:8, _:24, P:8, _:24, P:8, _/binary>>, P) -> true;
win_444(<<_:32, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_444(<<_:64, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_444(<<_:96, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_444(_, _) -> false.

win_544(<<P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_544(<<P:8, _:32, P:8, _:32, P:8, _:32, P:8, _/binary>>, P) -> true;
win_544(<<P:8, _:40, P:8, _:40, P:8, _:40, P:8, _/binary>>, P) -> true;
win_544(<<_:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_544(<<_:8, P:8, _:32, P:8, _:32, P:8, _:32, P:8, _/binary>>, P) -> true;
win_544(<<_:8, P:8, _:40, P:8, _:40, P:8, _:40, P:8, _/binary>>, P) -> true;
win_544(<<_:16, P:8, _:32, P:8, _:32, P:8, _:32, P:8, _/binary>>, P) -> true;
win_544(<<_:24, P:8, _:24, P:8, _:24, P:8, _:24, P:8, _/binary>>, P) -> true;
win_544(<<_:24, P:8, _:32, P:8, _:32, P:8, _:32, P:8, _/binary>>, P) -> true;
win_544(<<_:32, P:8, _:24, P:8, _:24, P:8, _:24, P:8, _/binary>>, P) -> true;
win_544(<<_:32, P:8, _:32, P:8, _:32, P:8, _:32, P:8, _/binary>>, P) -> true;
win_544(<<_:40, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_544(<<_:48, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_544(<<_:80, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_544(<<_:88, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_544(<<_:120, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_544(<<_:128, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_544(_, _) -> false.

win_554(<<P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_554(<<P:8, _:32, P:8, _:32, P:8, _:32, P:8, _/binary>>, P) -> true;
win_554(<<P:8, _:40, P:8, _:40, P:8, _:40, P:8, _/binary>>, P) -> true;
win_554(<<_:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_554(<<_:8, P:8, _:32, P:8, _:32, P:8, _:32, P:8, _/binary>>, P) -> true;
win_554(<<_:8, P:8, _:40, P:8, _:40, P:8, _:40, P:8, _/binary>>, P) -> true;
win_554(<<_:16, P:8, _:32, P:8, _:32, P:8, _:32, P:8, _/binary>>, P) -> true;
win_554(<<_:24, P:8, _:24, P:8, _:24, P:8, _:24, P:8, _/binary>>, P) -> true;
win_554(<<_:24, P:8, _:32, P:8, _:32, P:8, _:32, P:8, _/binary>>, P) -> true;
win_554(<<_:32, P:8, _:24, P:8, _:24, P:8, _:24, P:8, _/binary>>, P) -> true;
win_554(<<_:32, P:8, _:32, P:8, _:32, P:8, _:32, P:8, _/binary>>, P) -> true;
win_554(<<_:40, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_554(<<_:40, P:8, _:32, P:8, _:32, P:8, _:32, P:8, _/binary>>, P) -> true;
win_554(<<_:40, P:8, _:40, P:8, _:40, P:8, _:40, P:8, _/binary>>, P) -> true;
win_554(<<_:48, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_554(<<_:48, P:8, _:32, P:8, _:32, P:8, _:32, P:8, _/binary>>, P) -> true;
win_554(<<_:48, P:8, _:40, P:8, _:40, P:8, _:40, P:8, _/binary>>, P) -> true;
win_554(<<_:56, P:8, _:32, P:8, _:32, P:8, _:32, P:8, _/binary>>, P) -> true;
win_554(<<_:64, P:8, _:24, P:8, _:24, P:8, _:24, P:8, _/binary>>, P) -> true;
win_554(<<_:64, P:8, _:32, P:8, _:32, P:8, _:32, P:8, _/binary>>, P) -> true;
win_554(<<_:72, P:8, _:24, P:8, _:24, P:8, _:24, P:8, _/binary>>, P) -> true;
win_554(<<_:72, P:8, _:32, P:8, _:32, P:8, _:32, P:8, _/binary>>, P) -> true;
win_554(<<_:80, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_554(<<_:88, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_554(<<_:120, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_554(<<_:128, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_554(<<_:160, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_554(<<_:168, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_554(_, _) -> false.

win_555(<<P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_555(<<P:8, _:32, P:8, _:32, P:8, _:32, P:8, _:32, P:8, _/binary>>, P) -> true;
win_555(<<P:8, _:40, P:8, _:40, P:8, _:40, P:8, _:40, P:8, _/binary>>, P) -> true;
win_555(<<_:8, P:8, _:32, P:8, _:32, P:8, _:32, P:8, _:32, P:8, _/binary>>, P) -> true;
win_555(<<_:16, P:8, _:32, P:8, _:32, P:8, _:32, P:8, _:32, P:8, _/binary>>, P) -> true;
win_555(<<_:24, P:8, _:32, P:8, _:32, P:8, _:32, P:8, _:32, P:8, _/binary>>, P) -> true;
win_555(<<_:32, P:8, _:24, P:8, _:24, P:8, _:24, P:8, _:24, P:8, _/binary>>, P) -> true;
win_555(<<_:32, P:8, _:32, P:8, _:32, P:8, _:32, P:8, _:32, P:8, _/binary>>, P) -> true;
win_555(<<_:40, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_555(<<_:80, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_555(<<_:120, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_555(<<_:160, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_555(_, _) -> false.

win_644(<<P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_644(<<P:8, _:40, P:8, _:40, P:8, _:40, P:8, _/binary>>, P) -> true;
win_644(<<P:8, _:48, P:8, _:48, P:8, _:48, P:8, _/binary>>, P) -> true;
win_644(<<_:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_644(<<_:8, P:8, _:40, P:8, _:40, P:8, _:40, P:8, _/binary>>, P) -> true;
win_644(<<_:8, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _/binary>>, P) -> true;
win_644(<<_:16, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_644(<<_:16, P:8, _:40, P:8, _:40, P:8, _:40, P:8, _/binary>>, P) -> true;
win_644(<<_:16, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _/binary>>, P) -> true;
win_644(<<_:24, P:8, _:32, P:8, _:32, P:8, _:32, P:8, _/binary>>, P) -> true;
win_644(<<_:24, P:8, _:40, P:8, _:40, P:8, _:40, P:8, _/binary>>, P) -> true;
win_644(<<_:32, P:8, _:32, P:8, _:32, P:8, _:32, P:8, _/binary>>, P) -> true;
win_644(<<_:32, P:8, _:40, P:8, _:40, P:8, _:40, P:8, _/binary>>, P) -> true;
win_644(<<_:40, P:8, _:32, P:8, _:32, P:8, _:32, P:8, _/binary>>, P) -> true;
win_644(<<_:40, P:8, _:40, P:8, _:40, P:8, _:40, P:8, _/binary>>, P) -> true;
win_644(<<_:48, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_644(<<_:56, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_644(<<_:64, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_644(<<_:96, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_644(<<_:104, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_644(<<_:112, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_644(<<_:144, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_644(<<_:152, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_644(<<_:160, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_644(_, _) -> false.

win_654(<<P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_654(<<P:8, _:40, P:8, _:40, P:8, _:40, P:8, _/binary>>, P) -> true;
win_654(<<P:8, _:48, P:8, _:48, P:8, _:48, P:8, _/binary>>, P) -> true;
win_654(<<_:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_654(<<_:8, P:8, _:40, P:8, _:40, P:8, _:40, P:8, _/binary>>, P) -> true;
win_654(<<_:8, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _/binary>>, P) -> true;
win_654(<<_:16, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_654(<<_:16, P:8, _:40, P:8, _:40, P:8, _:40, P:8, _/binary>>, P) -> true;
win_654(<<_:16, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _/binary>>, P) -> true;
win_654(<<_:24, P:8, _:32, P:8, _:32, P:8, _:32, P:8, _/binary>>, P) -> true;
win_654(<<_:24, P:8, _:40, P:8, _:40, P:8, _:40, P:8, _/binary>>, P) -> true;
win_654(<<_:32, P:8, _:32, P:8, _:32, P:8, _:32, P:8, _/binary>>, P) -> true;
win_654(<<_:32, P:8, _:40, P:8, _:40, P:8, _:40, P:8, _/binary>>, P) -> true;
win_654(<<_:40, P:8, _:32, P:8, _:32, P:8, _:32, P:8, _/binary>>, P) -> true;
win_654(<<_:40, P:8, _:40, P:8, _:40, P:8, _:40, P:8, _/binary>>, P) -> true;
win_654(<<_:48, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_654(<<_:48, P:8, _:40, P:8, _:40, P:8, _:40, P:8, _/binary>>, P) -> true;
win_654(<<_:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _/binary>>, P) -> true;
win_654(<<_:56, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_654(<<_:56, P:8, _:40, P:8, _:40, P:8, _:40, P:8, _/binary>>, P) -> true;
win_654(<<_:56, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _/binary>>, P) -> true;
win_654(<<_:64, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_654(<<_:64, P:8, _:40, P:8, _:40, P:8, _:40, P:8, _/binary>>, P) -> true;
win_654(<<_:64, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _/binary>>, P) -> true;
win_654(<<_:72, P:8, _:32, P:8, _:32, P:8, _:32, P:8, _/binary>>, P) -> true;
win_654(<<_:72, P:8, _:40, P:8, _:40, P:8, _:40, P:8, _/binary>>, P) -> true;
win_654(<<_:80, P:8, _:32, P:8, _:32, P:8, _:32, P:8, _/binary>>, P) -> true;
win_654(<<_:80, P:8, _:40, P:8, _:40, P:8, _:40, P:8, _/binary>>, P) -> true;
win_654(<<_:88, P:8, _:32, P:8, _:32, P:8, _:32, P:8, _/binary>>, P) -> true;
win_654(<<_:88, P:8, _:40, P:8, _:40, P:8, _:40, P:8, _/binary>>, P) -> true;
win_654(<<_:96, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_654(<<_:104, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_654(<<_:112, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_654(<<_:144, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_654(<<_:152, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_654(<<_:160, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_654(<<_:192, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_654(<<_:200, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_654(<<_:208, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_654(_, _) -> false.

win_655(<<P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_655(<<P:8, _:40, P:8, _:40, P:8, _:40, P:8, _:40, P:8, _/binary>>, P) -> true;
win_655(<<P:8, _:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _/binary>>, P) -> true;
win_655(<<_:8, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_655(<<_:8, P:8, _:40, P:8, _:40, P:8, _:40, P:8, _:40, P:8, _/binary>>, P) -> true;
win_655(<<_:8, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _/binary>>, P) -> true;
win_655(<<_:16, P:8, _:40, P:8, _:40, P:8, _:40, P:8, _:40, P:8, _/binary>>, P) -> true;
win_655(<<_:24, P:8, _:40, P:8, _:40, P:8, _:40, P:8, _:40, P:8, _/binary>>, P) -> true;
win_655(<<_:32, P:8, _:32, P:8, _:32, P:8, _:32, P:8, _:32, P:8, _/binary>>, P) -> true;
win_655(<<_:32, P:8, _:40, P:8, _:40, P:8, _:40, P:8, _:40, P:8, _/binary>>, P) -> true;
win_655(<<_:40, P:8, _:32, P:8, _:32, P:8, _:32, P:8, _:32, P:8, _/binary>>, P) -> true;
win_655(<<_:40, P:8, _:40, P:8, _:40, P:8, _:40, P:8, _:40, P:8, _/binary>>, P) -> true;
win_655(<<_:48, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_655(<<_:56, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_655(<<_:96, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_655(<<_:104, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_655(<<_:144, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_655(<<_:152, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_655(<<_:192, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_655(<<_:200, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_655(_, _) -> false.

win_664(<<P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_664(<<P:8, _:40, P:8, _:40, P:8, _:40, P:8, _/binary>>, P) -> true;
win_664(<<P:8, _:48, P:8, _:48, P:8, _:48, P:8, _/binary>>, P) -> true;
win_664(<<_:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_664(<<_:8, P:8, _:40, P:8, _:40, P:8, _:40, P:8, _/binary>>, P) -> true;
win_664(<<_:8, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _/binary>>, P) -> true;
win_664(<<_:16, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_664(<<_:16, P:8, _:40, P:8, _:40, P:8, _:40, P:8, _/binary>>, P) -> true;
win_664(<<_:16, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _/binary>>, P) -> true;
win_664(<<_:24, P:8, _:32, P:8, _:32, P:8, _:32, P:8, _/binary>>, P) -> true;
win_664(<<_:24, P:8, _:40, P:8, _:40, P:8, _:40, P:8, _/binary>>, P) -> true;
win_664(<<_:32, P:8, _:32, P:8, _:32, P:8, _:32, P:8, _/binary>>, P) -> true;
win_664(<<_:32, P:8, _:40, P:8, _:40, P:8, _:40, P:8, _/binary>>, P) -> true;
win_664(<<_:40, P:8, _:32, P:8, _:32, P:8, _:32, P:8, _/binary>>, P) -> true;
win_664(<<_:40, P:8, _:40, P:8, _:40, P:8, _:40, P:8, _/binary>>, P) -> true;
win_664(<<_:48, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_664(<<_:48, P:8, _:40, P:8, _:40, P:8, _:40, P:8, _/binary>>, P) -> true;
win_664(<<_:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _/binary>>, P) -> true;
win_664(<<_:56, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_664(<<_:56, P:8, _:40, P:8, _:40, P:8, _:40, P:8, _/binary>>, P) -> true;
win_664(<<_:56, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _/binary>>, P) -> true;
win_664(<<_:64, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_664(<<_:64, P:8, _:40, P:8, _:40, P:8, _:40, P:8, _/binary>>, P) -> true;
win_664(<<_:64, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _/binary>>, P) -> true;
win_664(<<_:72, P:8, _:32, P:8, _:32, P:8, _:32, P:8, _/binary>>, P) -> true;
win_664(<<_:72, P:8, _:40, P:8, _:40, P:8, _:40, P:8, _/binary>>, P) -> true;
win_664(<<_:80, P:8, _:32, P:8, _:32, P:8, _:32, P:8, _/binary>>, P) -> true;
win_664(<<_:80, P:8, _:40, P:8, _:40, P:8, _:40, P:8, _/binary>>, P) -> true;
win_664(<<_:88, P:8, _:32, P:8, _:32, P:8, _:32, P:8, _/binary>>, P) -> true;
win_664(<<_:88, P:8, _:40, P:8, _:40, P:8, _:40, P:8, _/binary>>, P) -> true;
win_664(<<_:96, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_664(<<_:96, P:8, _:40, P:8, _:40, P:8, _:40, P:8, _/binary>>, P) -> true;
win_664(<<_:96, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _/binary>>, P) -> true;
win_664(<<_:104, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_664(<<_:104, P:8, _:40, P:8, _:40, P:8, _:40, P:8, _/binary>>, P) -> true;
win_664(<<_:104, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _/binary>>, P) -> true;
win_664(<<_:112, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_664(<<_:112, P:8, _:40, P:8, _:40, P:8, _:40, P:8, _/binary>>, P) -> true;
win_664(<<_:112, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _/binary>>, P) -> true;
win_664(<<_:120, P:8, _:32, P:8, _:32, P:8, _:32, P:8, _/binary>>, P) -> true;
win_664(<<_:120, P:8, _:40, P:8, _:40, P:8, _:40, P:8, _/binary>>, P) -> true;
win_664(<<_:128, P:8, _:32, P:8, _:32, P:8, _:32, P:8, _/binary>>, P) -> true;
win_664(<<_:128, P:8, _:40, P:8, _:40, P:8, _:40, P:8, _/binary>>, P) -> true;
win_664(<<_:136, P:8, _:32, P:8, _:32, P:8, _:32, P:8, _/binary>>, P) -> true;
win_664(<<_:136, P:8, _:40, P:8, _:40, P:8, _:40, P:8, _/binary>>, P) -> true;
win_664(<<_:144, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_664(<<_:152, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_664(<<_:160, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_664(<<_:192, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_664(<<_:200, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_664(<<_:208, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_664(<<_:240, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_664(<<_:248, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_664(<<_:256, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_664(_, _) -> false.

win_665(<<P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_665(<<P:8, _:40, P:8, _:40, P:8, _:40, P:8, _:40, P:8, _/binary>>, P) -> true;
win_665(<<P:8, _:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _/binary>>, P) -> true;
win_665(<<_:8, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_665(<<_:8, P:8, _:40, P:8, _:40, P:8, _:40, P:8, _:40, P:8, _/binary>>, P) -> true;
win_665(<<_:8, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _/binary>>, P) -> true;
win_665(<<_:16, P:8, _:40, P:8, _:40, P:8, _:40, P:8, _:40, P:8, _/binary>>, P) -> true;
win_665(<<_:24, P:8, _:40, P:8, _:40, P:8, _:40, P:8, _:40, P:8, _/binary>>, P) -> true;
win_665(<<_:32, P:8, _:32, P:8, _:32, P:8, _:32, P:8, _:32, P:8, _/binary>>, P) -> true;
win_665(<<_:32, P:8, _:40, P:8, _:40, P:8, _:40, P:8, _:40, P:8, _/binary>>, P) -> true;
win_665(<<_:40, P:8, _:32, P:8, _:32, P:8, _:32, P:8, _:32, P:8, _/binary>>, P) -> true;
win_665(<<_:40, P:8, _:40, P:8, _:40, P:8, _:40, P:8, _:40, P:8, _/binary>>, P) -> true;
win_665(<<_:48, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_665(<<_:48, P:8, _:40, P:8, _:40, P:8, _:40, P:8, _:40, P:8, _/binary>>, P) -> true;
win_665(<<_:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _/binary>>, P) -> true;
win_665(<<_:56, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_665(<<_:56, P:8, _:40, P:8, _:40, P:8, _:40, P:8, _:40, P:8, _/binary>>, P) -> true;
win_665(<<_:56, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _/binary>>, P) -> true;
win_665(<<_:64, P:8, _:40, P:8, _:40, P:8, _:40, P:8, _:40, P:8, _/binary>>, P) -> true;
win_665(<<_:72, P:8, _:40, P:8, _:40, P:8, _:40, P:8, _:40, P:8, _/binary>>, P) -> true;
win_665(<<_:80, P:8, _:32, P:8, _:32, P:8, _:32, P:8, _:32, P:8, _/binary>>, P) -> true;
win_665(<<_:80, P:8, _:40, P:8, _:40, P:8, _:40, P:8, _:40, P:8, _/binary>>, P) -> true;
win_665(<<_:88, P:8, _:32, P:8, _:32, P:8, _:32, P:8, _:32, P:8, _/binary>>, P) -> true;
win_665(<<_:88, P:8, _:40, P:8, _:40, P:8, _:40, P:8, _:40, P:8, _/binary>>, P) -> true;
win_665(<<_:96, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_665(<<_:104, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_665(<<_:144, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_665(<<_:152, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_665(<<_:192, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_665(<<_:200, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_665(<<_:240, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_665(<<_:248, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_665(_, _) -> false.

win_666(<<P:8, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_666(<<P:8, _:40, P:8, _:40, P:8, _:40, P:8, _:40, P:8, _:40, P:8, _/binary>>, P) -> true;
win_666(<<P:8, _:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _/binary>>, P) -> true;
win_666(<<_:8, P:8, _:40, P:8, _:40, P:8, _:40, P:8, _:40, P:8, _:40, P:8, _/binary>>, P) -> true;
win_666(<<_:16, P:8, _:40, P:8, _:40, P:8, _:40, P:8, _:40, P:8, _:40, P:8, _/binary>>, P) -> true;
win_666(<<_:24, P:8, _:40, P:8, _:40, P:8, _:40, P:8, _:40, P:8, _:40, P:8, _/binary>>, P) -> true;
win_666(<<_:32, P:8, _:40, P:8, _:40, P:8, _:40, P:8, _:40, P:8, _:40, P:8, _/binary>>, P) -> true;
win_666(<<_:40, P:8, _:32, P:8, _:32, P:8, _:32, P:8, _:32, P:8, _:32, P:8, _/binary>>, P) -> true;
win_666(<<_:40, P:8, _:40, P:8, _:40, P:8, _:40, P:8, _:40, P:8, _:40, P:8, _/binary>>, P) -> true;
win_666(<<_:48, P:8, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_666(<<_:96, P:8, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_666(<<_:144, P:8, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_666(<<_:192, P:8, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_666(<<_:240, P:8, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_666(_, _) -> false.

win_744(<<P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_744(<<P:8, _:48, P:8, _:48, P:8, _:48, P:8, _/binary>>, P) -> true;
win_744(<<P:8, _:56, P:8, _:56, P:8, _:56, P:8, _/binary>>, P) -> true;
win_744(<<_:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_744(<<_:8, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _/binary>>, P) -> true;
win_744(<<_:8, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _/binary>>, P) -> true;
win_744(<<_:16, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_744(<<_:16, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _/binary>>, P) -> true;
win_744(<<_:16, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _/binary>>, P) -> true;
win_744(<<_:24, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_744(<<_:24, P:8, _:40, P:8, _:40, P:8, _:40, P:8, _/binary>>, P) -> true;
win_744(<<_:24, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _/binary>>, P) -> true;
win_744(<<_:24, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _/binary>>, P) -> true;
win_744(<<_:32, P:8, _:40, P:8, _:40, P:8, _:40, P:8, _/binary>>, P) -> true;
win_744(<<_:32, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _/binary>>, P) -> true;
win_744(<<_:40, P:8, _:40, P:8, _:40, P:8, _:40, P:8, _/binary>>, P) -> true;
win_744(<<_:40, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _/binary>>, P) -> true;
win_744(<<_:48, P:8, _:40, P:8, _:40, P:8, _:40, P:8, _/binary>>, P) -> true;
win_744(<<_:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _/binary>>, P) -> true;
win_744(<<_:56, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_744(<<_:64, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_744(<<_:72, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_744(<<_:80, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_744(<<_:112, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_744(<<_:120, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_744(<<_:128, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_744(<<_:136, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_744(<<_:168, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_744(<<_:176, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_744(<<_:184, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_744(<<_:192, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_744(_, _) -> false.

win_754(<<P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_754(<<P:8, _:48, P:8, _:48, P:8, _:48, P:8, _/binary>>, P) -> true;
win_754(<<P:8, _:56, P:8, _:56, P:8, _:56, P:8, _/binary>>, P) -> true;
win_754(<<_:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_754(<<_:8, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _/binary>>, P) -> true;
win_754(<<_:8, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _/binary>>, P) -> true;
win_754(<<_:16, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_754(<<_:16, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _/binary>>, P) -> true;
win_754(<<_:16, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _/binary>>, P) -> true;
win_754(<<_:24, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_754(<<_:24, P:8, _:40, P:8, _:40, P:8, _:40, P:8, _/binary>>, P) -> true;
win_754(<<_:24, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _/binary>>, P) -> true;
win_754(<<_:24, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _/binary>>, P) -> true;
win_754(<<_:32, P:8, _:40, P:8, _:40, P:8, _:40, P:8, _/binary>>, P) -> true;
win_754(<<_:32, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _/binary>>, P) -> true;
win_754(<<_:40, P:8, _:40, P:8, _:40, P:8, _:40, P:8, _/binary>>, P) -> true;
win_754(<<_:40, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _/binary>>, P) -> true;
win_754(<<_:48, P:8, _:40, P:8, _:40, P:8, _:40, P:8, _/binary>>, P) -> true;
win_754(<<_:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _/binary>>, P) -> true;
win_754(<<_:56, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_754(<<_:56, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _/binary>>, P) -> true;
win_754(<<_:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _/binary>>, P) -> true;
win_754(<<_:64, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_754(<<_:64, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _/binary>>, P) -> true;
win_754(<<_:64, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _/binary>>, P) -> true;
win_754(<<_:72, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_754(<<_:72, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _/binary>>, P) -> true;
win_754(<<_:72, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _/binary>>, P) -> true;
win_754(<<_:80, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_754(<<_:80, P:8, _:40, P:8, _:40, P:8, _:40, P:8, _/binary>>, P) -> true;
win_754(<<_:80, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _/binary>>, P) -> true;
win_754(<<_:80, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _/binary>>, P) -> true;
win_754(<<_:88, P:8, _:40, P:8, _:40, P:8, _:40, P:8, _/binary>>, P) -> true;
win_754(<<_:88, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _/binary>>, P) -> true;
win_754(<<_:96, P:8, _:40, P:8, _:40, P:8, _:40, P:8, _/binary>>, P) -> true;
win_754(<<_:96, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _/binary>>, P) -> true;
win_754(<<_:104, P:8, _:40, P:8, _:40, P:8, _:40, P:8, _/binary>>, P) -> true;
win_754(<<_:104, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _/binary>>, P) -> true;
win_754(<<_:112, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_754(<<_:120, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_754(<<_:128, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_754(<<_:136, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_754(<<_:168, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_754(<<_:176, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_754(<<_:184, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_754(<<_:192, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_754(<<_:224, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_754(<<_:232, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_754(<<_:240, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_754(<<_:248, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_754(_, _) -> false.

win_755(<<P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_755(<<P:8, _:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _/binary>>, P) -> true;
win_755(<<P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _/binary>>, P) -> true;
win_755(<<_:8, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_755(<<_:8, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _/binary>>, P) -> true;
win_755(<<_:8, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _/binary>>, P) -> true;
win_755(<<_:16, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_755(<<_:16, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _/binary>>, P) -> true;
win_755(<<_:16, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _/binary>>, P) -> true;
win_755(<<_:24, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _/binary>>, P) -> true;
win_755(<<_:32, P:8, _:40, P:8, _:40, P:8, _:40, P:8, _:40, P:8, _/binary>>, P) -> true;
win_755(<<_:32, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _/binary>>, P) -> true;
win_755(<<_:40, P:8, _:40, P:8, _:40, P:8, _:40, P:8, _:40, P:8, _/binary>>, P) -> true;
win_755(<<_:40, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _/binary>>, P) -> true;
win_755(<<_:48, P:8, _:40, P:8, _:40, P:8, _:40, P:8, _:40, P:8, _/binary>>, P) -> true;
win_755(<<_:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _/binary>>, P) -> true;
win_755(<<_:56, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_755(<<_:64, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_755(<<_:72, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_755(<<_:112, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_755(<<_:120, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_755(<<_:128, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_755(<<_:168, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_755(<<_:176, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_755(<<_:184, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_755(<<_:224, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_755(<<_:232, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_755(<<_:240, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_755(_, _) -> false.

win_764(<<P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_764(<<P:8, _:48, P:8, _:48, P:8, _:48, P:8, _/binary>>, P) -> true;
win_764(<<P:8, _:56, P:8, _:56, P:8, _:56, P:8, _/binary>>, P) -> true;
win_764(<<_:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_764(<<_:8, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _/binary>>, P) -> true;
win_764(<<_:8, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _/binary>>, P) -> true;
win_764(<<_:16, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_764(<<_:16, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _/binary>>, P) -> true;
win_764(<<_:16, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _/binary>>, P) -> true;
win_764(<<_:24, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_764(<<_:24, P:8, _:40, P:8, _:40, P:8, _:40, P:8, _/binary>>, P) -> true;
win_764(<<_:24, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _/binary>>, P) -> true;
win_764(<<_:24, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _/binary>>, P) -> true;
win_764(<<_:32, P:8, _:40, P:8, _:40, P:8, _:40, P:8, _/binary>>, P) -> true;
win_764(<<_:32, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _/binary>>, P) -> true;
win_764(<<_:40, P:8, _:40, P:8, _:40, P:8, _:40, P:8, _/binary>>, P) -> true;
win_764(<<_:40, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _/binary>>, P) -> true;
win_764(<<_:48, P:8, _:40, P:8, _:40, P:8, _:40, P:8, _/binary>>, P) -> true;
win_764(<<_:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _/binary>>, P) -> true;
win_764(<<_:56, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_764(<<_:56, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _/binary>>, P) -> true;
win_764(<<_:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _/binary>>, P) -> true;
win_764(<<_:64, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_764(<<_:64, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _/binary>>, P) -> true;
win_764(<<_:64, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _/binary>>, P) -> true;
win_764(<<_:72, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_764(<<_:72, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _/binary>>, P) -> true;
win_764(<<_:72, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _/binary>>, P) -> true;
win_764(<<_:80, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_764(<<_:80, P:8, _:40, P:8, _:40, P:8, _:40, P:8, _/binary>>, P) -> true;
win_764(<<_:80, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _/binary>>, P) -> true;
win_764(<<_:80, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _/binary>>, P) -> true;
win_764(<<_:88, P:8, _:40, P:8, _:40, P:8, _:40, P:8, _/binary>>, P) -> true;
win_764(<<_:88, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _/binary>>, P) -> true;
win_764(<<_:96, P:8, _:40, P:8, _:40, P:8, _:40, P:8, _/binary>>, P) -> true;
win_764(<<_:96, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _/binary>>, P) -> true;
win_764(<<_:104, P:8, _:40, P:8, _:40, P:8, _:40, P:8, _/binary>>, P) -> true;
win_764(<<_:104, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _/binary>>, P) -> true;
win_764(<<_:112, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_764(<<_:112, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _/binary>>, P) -> true;
win_764(<<_:112, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _/binary>>, P) -> true;
win_764(<<_:120, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_764(<<_:120, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _/binary>>, P) -> true;
win_764(<<_:120, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _/binary>>, P) -> true;
win_764(<<_:128, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_764(<<_:128, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _/binary>>, P) -> true;
win_764(<<_:128, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _/binary>>, P) -> true;
win_764(<<_:136, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_764(<<_:136, P:8, _:40, P:8, _:40, P:8, _:40, P:8, _/binary>>, P) -> true;
win_764(<<_:136, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _/binary>>, P) -> true;
win_764(<<_:136, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _/binary>>, P) -> true;
win_764(<<_:144, P:8, _:40, P:8, _:40, P:8, _:40, P:8, _/binary>>, P) -> true;
win_764(<<_:144, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _/binary>>, P) -> true;
win_764(<<_:152, P:8, _:40, P:8, _:40, P:8, _:40, P:8, _/binary>>, P) -> true;
win_764(<<_:152, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _/binary>>, P) -> true;
win_764(<<_:160, P:8, _:40, P:8, _:40, P:8, _:40, P:8, _/binary>>, P) -> true;
win_764(<<_:160, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _/binary>>, P) -> true;
win_764(<<_:168, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_764(<<_:176, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_764(<<_:184, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_764(<<_:192, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_764(<<_:224, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_764(<<_:232, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_764(<<_:240, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_764(<<_:248, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_764(<<_:280, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_764(<<_:288, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_764(<<_:296, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_764(<<_:304, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_764(_, _) -> false.

win_765(<<P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_765(<<P:8, _:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _/binary>>, P) -> true;
win_765(<<P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _/binary>>, P) -> true;
win_765(<<_:8, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_765(<<_:8, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _/binary>>, P) -> true;
win_765(<<_:8, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _/binary>>, P) -> true;
win_765(<<_:16, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_765(<<_:16, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _/binary>>, P) -> true;
win_765(<<_:16, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _/binary>>, P) -> true;
win_765(<<_:24, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _/binary>>, P) -> true;
win_765(<<_:32, P:8, _:40, P:8, _:40, P:8, _:40, P:8, _:40, P:8, _/binary>>, P) -> true;
win_765(<<_:32, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _/binary>>, P) -> true;
win_765(<<_:40, P:8, _:40, P:8, _:40, P:8, _:40, P:8, _:40, P:8, _/binary>>, P) -> true;
win_765(<<_:40, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _/binary>>, P) -> true;
win_765(<<_:48, P:8, _:40, P:8, _:40, P:8, _:40, P:8, _:40, P:8, _/binary>>, P) -> true;
win_765(<<_:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _/binary>>, P) -> true;
win_765(<<_:56, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_765(<<_:56, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _/binary>>, P) -> true;
win_765(<<_:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _/binary>>, P) -> true;
win_765(<<_:64, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_765(<<_:64, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _/binary>>, P) -> true;
win_765(<<_:64, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _/binary>>, P) -> true;
win_765(<<_:72, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_765(<<_:72, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _/binary>>, P) -> true;
win_765(<<_:72, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _/binary>>, P) -> true;
win_765(<<_:80, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _/binary>>, P) -> true;
win_765(<<_:88, P:8, _:40, P:8, _:40, P:8, _:40, P:8, _:40, P:8, _/binary>>, P) -> true;
win_765(<<_:88, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _/binary>>, P) -> true;
win_765(<<_:96, P:8, _:40, P:8, _:40, P:8, _:40, P:8, _:40, P:8, _/binary>>, P) -> true;
win_765(<<_:96, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _/binary>>, P) -> true;
win_765(<<_:104, P:8, _:40, P:8, _:40, P:8, _:40, P:8, _:40, P:8, _/binary>>, P) -> true;
win_765(<<_:104, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _/binary>>, P) -> true;
win_765(<<_:112, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_765(<<_:120, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_765(<<_:128, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_765(<<_:168, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_765(<<_:176, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_765(<<_:184, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_765(<<_:224, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_765(<<_:232, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_765(<<_:240, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_765(<<_:280, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_765(<<_:288, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_765(<<_:296, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_765(_, _) -> false.

win_766(<<P:8, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_766(<<P:8, _:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _/binary>>, P) -> true;
win_766(<<P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _/binary>>, P) -> true;
win_766(<<_:8, P:8, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_766(<<_:8, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _/binary>>, P) -> true;
win_766(<<_:8, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _/binary>>, P) -> true;
win_766(<<_:16, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _/binary>>, P) -> true;
win_766(<<_:24, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _/binary>>, P) -> true;
win_766(<<_:32, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _/binary>>, P) -> true;
win_766(<<_:40, P:8, _:40, P:8, _:40, P:8, _:40, P:8, _:40, P:8, _:40, P:8, _/binary>>, P) -> true;
win_766(<<_:40, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _/binary>>, P) -> true;
win_766(<<_:48, P:8, _:40, P:8, _:40, P:8, _:40, P:8, _:40, P:8, _:40, P:8, _/binary>>, P) -> true;
win_766(<<_:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _/binary>>, P) -> true;
win_766(<<_:56, P:8, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_766(<<_:64, P:8, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_766(<<_:112, P:8, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_766(<<_:120, P:8, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_766(<<_:168, P:8, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_766(<<_:176, P:8, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_766(<<_:224, P:8, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_766(<<_:232, P:8, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_766(<<_:280, P:8, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_766(<<_:288, P:8, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_766(_, _) -> false.

win_775(<<P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_775(<<P:8, _:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _/binary>>, P) -> true;
win_775(<<P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _/binary>>, P) -> true;
win_775(<<_:8, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_775(<<_:8, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _/binary>>, P) -> true;
win_775(<<_:8, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _/binary>>, P) -> true;
win_775(<<_:16, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_775(<<_:16, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _/binary>>, P) -> true;
win_775(<<_:16, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _/binary>>, P) -> true;
win_775(<<_:24, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _/binary>>, P) -> true;
win_775(<<_:32, P:8, _:40, P:8, _:40, P:8, _:40, P:8, _:40, P:8, _/binary>>, P) -> true;
win_775(<<_:32, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _/binary>>, P) -> true;
win_775(<<_:40, P:8, _:40, P:8, _:40, P:8, _:40, P:8, _:40, P:8, _/binary>>, P) -> true;
win_775(<<_:40, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _/binary>>, P) -> true;
win_775(<<_:48, P:8, _:40, P:8, _:40, P:8, _:40, P:8, _:40, P:8, _/binary>>, P) -> true;
win_775(<<_:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _/binary>>, P) -> true;
win_775(<<_:56, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_775(<<_:56, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _/binary>>, P) -> true;
win_775(<<_:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _/binary>>, P) -> true;
win_775(<<_:64, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_775(<<_:64, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _/binary>>, P) -> true;
win_775(<<_:64, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _/binary>>, P) -> true;
win_775(<<_:72, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_775(<<_:72, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _/binary>>, P) -> true;
win_775(<<_:72, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _/binary>>, P) -> true;
win_775(<<_:80, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _/binary>>, P) -> true;
win_775(<<_:88, P:8, _:40, P:8, _:40, P:8, _:40, P:8, _:40, P:8, _/binary>>, P) -> true;
win_775(<<_:88, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _/binary>>, P) -> true;
win_775(<<_:96, P:8, _:40, P:8, _:40, P:8, _:40, P:8, _:40, P:8, _/binary>>, P) -> true;
win_775(<<_:96, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _/binary>>, P) -> true;
win_775(<<_:104, P:8, _:40, P:8, _:40, P:8, _:40, P:8, _:40, P:8, _/binary>>, P) -> true;
win_775(<<_:104, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _/binary>>, P) -> true;
win_775(<<_:112, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_775(<<_:112, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _/binary>>, P) -> true;
win_775(<<_:112, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _/binary>>, P) -> true;
win_775(<<_:120, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_775(<<_:120, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _/binary>>, P) -> true;
win_775(<<_:120, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _/binary>>, P) -> true;
win_775(<<_:128, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_775(<<_:128, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _/binary>>, P) -> true;
win_775(<<_:128, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _/binary>>, P) -> true;
win_775(<<_:136, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _/binary>>, P) -> true;
win_775(<<_:144, P:8, _:40, P:8, _:40, P:8, _:40, P:8, _:40, P:8, _/binary>>, P) -> true;
win_775(<<_:144, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _/binary>>, P) -> true;
win_775(<<_:152, P:8, _:40, P:8, _:40, P:8, _:40, P:8, _:40, P:8, _/binary>>, P) -> true;
win_775(<<_:152, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _/binary>>, P) -> true;
win_775(<<_:160, P:8, _:40, P:8, _:40, P:8, _:40, P:8, _:40, P:8, _/binary>>, P) -> true;
win_775(<<_:160, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _/binary>>, P) -> true;
win_775(<<_:168, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_775(<<_:176, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_775(<<_:184, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_775(<<_:224, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_775(<<_:232, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_775(<<_:240, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_775(<<_:280, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_775(<<_:288, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_775(<<_:296, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_775(<<_:336, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_775(<<_:344, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_775(<<_:352, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_775(_, _) -> false.

win_776(<<P:8, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_776(<<P:8, _:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _/binary>>, P) -> true;
win_776(<<P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _/binary>>, P) -> true;
win_776(<<_:8, P:8, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_776(<<_:8, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _/binary>>, P) -> true;
win_776(<<_:8, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _/binary>>, P) -> true;
win_776(<<_:16, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _/binary>>, P) -> true;
win_776(<<_:24, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _/binary>>, P) -> true;
win_776(<<_:32, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _/binary>>, P) -> true;
win_776(<<_:40, P:8, _:40, P:8, _:40, P:8, _:40, P:8, _:40, P:8, _:40, P:8, _/binary>>, P) -> true;
win_776(<<_:40, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _/binary>>, P) -> true;
win_776(<<_:48, P:8, _:40, P:8, _:40, P:8, _:40, P:8, _:40, P:8, _:40, P:8, _/binary>>, P) -> true;
win_776(<<_:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _/binary>>, P) -> true;
win_776(<<_:56, P:8, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_776(<<_:56, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _/binary>>, P) -> true;
win_776(<<_:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _/binary>>, P) -> true;
win_776(<<_:64, P:8, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_776(<<_:64, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _/binary>>, P) -> true;
win_776(<<_:64, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _/binary>>, P) -> true;
win_776(<<_:72, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _/binary>>, P) -> true;
win_776(<<_:80, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _/binary>>, P) -> true;
win_776(<<_:88, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _/binary>>, P) -> true;
win_776(<<_:96, P:8, _:40, P:8, _:40, P:8, _:40, P:8, _:40, P:8, _:40, P:8, _/binary>>, P) -> true;
win_776(<<_:96, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _/binary>>, P) -> true;
win_776(<<_:104, P:8, _:40, P:8, _:40, P:8, _:40, P:8, _:40, P:8, _:40, P:8, _/binary>>, P) -> true;
win_776(<<_:104, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _/binary>>, P) -> true;
win_776(<<_:112, P:8, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_776(<<_:120, P:8, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_776(<<_:168, P:8, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_776(<<_:176, P:8, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_776(<<_:224, P:8, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_776(<<_:232, P:8, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_776(<<_:280, P:8, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_776(<<_:288, P:8, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_776(<<_:336, P:8, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_776(<<_:344, P:8, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_776(_, _) -> false.

win_777(<<P:8, P:8, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_777(<<P:8, _:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _/binary>>, P) -> true;
win_777(<<P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _/binary>>, P) -> true;
win_777(<<_:8, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _/binary>>, P) -> true;
win_777(<<_:16, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _/binary>>, P) -> true;
win_777(<<_:24, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _/binary>>, P) -> true;
win_777(<<_:32, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _/binary>>, P) -> true;
win_777(<<_:40, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _/binary>>, P) -> true;
win_777(<<_:48, P:8, _:40, P:8, _:40, P:8, _:40, P:8, _:40, P:8, _:40, P:8, _:40, P:8, _/binary>>, P) -> true;
win_777(<<_:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _/binary>>, P) -> true;
win_777(<<_:56, P:8, P:8, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_777(<<_:112, P:8, P:8, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_777(<<_:168, P:8, P:8, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_777(<<_:224, P:8, P:8, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_777(<<_:280, P:8, P:8, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_777(<<_:336, P:8, P:8, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_777(_, _) -> false.

win_855(<<P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_855(<<P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _/binary>>, P) -> true;
win_855(<<P:8, _:64, P:8, _:64, P:8, _:64, P:8, _:64, P:8, _/binary>>, P) -> true;
win_855(<<_:8, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_855(<<_:8, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _/binary>>, P) -> true;
win_855(<<_:8, P:8, _:64, P:8, _:64, P:8, _:64, P:8, _:64, P:8, _/binary>>, P) -> true;
win_855(<<_:16, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_855(<<_:16, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _/binary>>, P) -> true;
win_855(<<_:16, P:8, _:64, P:8, _:64, P:8, _:64, P:8, _:64, P:8, _/binary>>, P) -> true;
win_855(<<_:24, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_855(<<_:24, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _/binary>>, P) -> true;
win_855(<<_:24, P:8, _:64, P:8, _:64, P:8, _:64, P:8, _:64, P:8, _/binary>>, P) -> true;
win_855(<<_:32, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _/binary>>, P) -> true;
win_855(<<_:32, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _/binary>>, P) -> true;
win_855(<<_:40, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _/binary>>, P) -> true;
win_855(<<_:40, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _/binary>>, P) -> true;
win_855(<<_:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _/binary>>, P) -> true;
win_855(<<_:48, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _/binary>>, P) -> true;
win_855(<<_:56, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _/binary>>, P) -> true;
win_855(<<_:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _/binary>>, P) -> true;
win_855(<<_:64, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_855(<<_:72, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_855(<<_:80, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_855(<<_:88, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_855(<<_:128, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_855(<<_:136, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_855(<<_:144, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_855(<<_:152, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_855(<<_:192, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_855(<<_:200, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_855(<<_:208, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_855(<<_:216, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_855(<<_:256, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_855(<<_:264, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_855(<<_:272, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_855(<<_:280, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_855(_, _) -> false.

win_865(<<P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_865(<<P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _/binary>>, P) -> true;
win_865(<<P:8, _:64, P:8, _:64, P:8, _:64, P:8, _:64, P:8, _/binary>>, P) -> true;
win_865(<<_:8, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_865(<<_:8, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _/binary>>, P) -> true;
win_865(<<_:8, P:8, _:64, P:8, _:64, P:8, _:64, P:8, _:64, P:8, _/binary>>, P) -> true;
win_865(<<_:16, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_865(<<_:16, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _/binary>>, P) -> true;
win_865(<<_:16, P:8, _:64, P:8, _:64, P:8, _:64, P:8, _:64, P:8, _/binary>>, P) -> true;
win_865(<<_:24, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_865(<<_:24, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _/binary>>, P) -> true;
win_865(<<_:24, P:8, _:64, P:8, _:64, P:8, _:64, P:8, _:64, P:8, _/binary>>, P) -> true;
win_865(<<_:32, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _/binary>>, P) -> true;
win_865(<<_:32, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _/binary>>, P) -> true;
win_865(<<_:40, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _/binary>>, P) -> true;
win_865(<<_:40, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _/binary>>, P) -> true;
win_865(<<_:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _/binary>>, P) -> true;
win_865(<<_:48, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _/binary>>, P) -> true;
win_865(<<_:56, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _/binary>>, P) -> true;
win_865(<<_:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _/binary>>, P) -> true;
win_865(<<_:64, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_865(<<_:64, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _/binary>>, P) -> true;
win_865(<<_:64, P:8, _:64, P:8, _:64, P:8, _:64, P:8, _:64, P:8, _/binary>>, P) -> true;
win_865(<<_:72, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_865(<<_:72, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _/binary>>, P) -> true;
win_865(<<_:72, P:8, _:64, P:8, _:64, P:8, _:64, P:8, _:64, P:8, _/binary>>, P) -> true;
win_865(<<_:80, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_865(<<_:80, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _/binary>>, P) -> true;
win_865(<<_:80, P:8, _:64, P:8, _:64, P:8, _:64, P:8, _:64, P:8, _/binary>>, P) -> true;
win_865(<<_:88, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_865(<<_:88, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _/binary>>, P) -> true;
win_865(<<_:88, P:8, _:64, P:8, _:64, P:8, _:64, P:8, _:64, P:8, _/binary>>, P) -> true;
win_865(<<_:96, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _/binary>>, P) -> true;
win_865(<<_:96, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _/binary>>, P) -> true;
win_865(<<_:104, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _/binary>>, P) -> true;
win_865(<<_:104, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _/binary>>, P) -> true;
win_865(<<_:112, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _/binary>>, P) -> true;
win_865(<<_:112, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _/binary>>, P) -> true;
win_865(<<_:120, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _/binary>>, P) -> true;
win_865(<<_:120, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _/binary>>, P) -> true;
win_865(<<_:128, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_865(<<_:136, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_865(<<_:144, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_865(<<_:152, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_865(<<_:192, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_865(<<_:200, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_865(<<_:208, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_865(<<_:216, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_865(<<_:256, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_865(<<_:264, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_865(<<_:272, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_865(<<_:280, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_865(<<_:320, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_865(<<_:328, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_865(<<_:336, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_865(<<_:344, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_865(_, _) -> false.

win_866(<<P:8, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_866(<<P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _/binary>>, P) -> true;
win_866(<<P:8, _:64, P:8, _:64, P:8, _:64, P:8, _:64, P:8, _:64, P:8, _/binary>>, P) -> true;
win_866(<<_:8, P:8, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_866(<<_:8, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _/binary>>, P) -> true;
win_866(<<_:8, P:8, _:64, P:8, _:64, P:8, _:64, P:8, _:64, P:8, _:64, P:8, _/binary>>, P) -> true;
win_866(<<_:16, P:8, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_866(<<_:16, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _/binary>>, P) -> true;
win_866(<<_:16, P:8, _:64, P:8, _:64, P:8, _:64, P:8, _:64, P:8, _:64, P:8, _/binary>>, P) -> true;
win_866(<<_:24, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _/binary>>, P) -> true;
win_866(<<_:32, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _/binary>>, P) -> true;
win_866(<<_:40, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _/binary>>, P) -> true;
win_866(<<_:40, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _/binary>>, P) -> true;
win_866(<<_:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _/binary>>, P) -> true;
win_866(<<_:48, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _/binary>>, P) -> true;
win_866(<<_:56, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _/binary>>, P) -> true;
win_866(<<_:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _/binary>>, P) -> true;
win_866(<<_:64, P:8, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_866(<<_:72, P:8, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_866(<<_:80, P:8, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_866(<<_:128, P:8, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_866(<<_:136, P:8, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_866(<<_:144, P:8, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_866(<<_:192, P:8, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_866(<<_:200, P:8, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_866(<<_:208, P:8, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_866(<<_:256, P:8, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_866(<<_:264, P:8, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_866(<<_:272, P:8, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_866(<<_:320, P:8, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_866(<<_:328, P:8, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_866(<<_:336, P:8, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_866(_, _) -> false.

win_875(<<P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_875(<<P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _/binary>>, P) -> true;
win_875(<<P:8, _:64, P:8, _:64, P:8, _:64, P:8, _:64, P:8, _/binary>>, P) -> true;
win_875(<<_:8, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_875(<<_:8, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _/binary>>, P) -> true;
win_875(<<_:8, P:8, _:64, P:8, _:64, P:8, _:64, P:8, _:64, P:8, _/binary>>, P) -> true;
win_875(<<_:16, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_875(<<_:16, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _/binary>>, P) -> true;
win_875(<<_:16, P:8, _:64, P:8, _:64, P:8, _:64, P:8, _:64, P:8, _/binary>>, P) -> true;
win_875(<<_:24, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_875(<<_:24, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _/binary>>, P) -> true;
win_875(<<_:24, P:8, _:64, P:8, _:64, P:8, _:64, P:8, _:64, P:8, _/binary>>, P) -> true;
win_875(<<_:32, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _/binary>>, P) -> true;
win_875(<<_:32, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _/binary>>, P) -> true;
win_875(<<_:40, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _/binary>>, P) -> true;
win_875(<<_:40, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _/binary>>, P) -> true;
win_875(<<_:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _/binary>>, P) -> true;
win_875(<<_:48, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _/binary>>, P) -> true;
win_875(<<_:56, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _/binary>>, P) -> true;
win_875(<<_:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _/binary>>, P) -> true;
win_875(<<_:64, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_875(<<_:64, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _/binary>>, P) -> true;
win_875(<<_:64, P:8, _:64, P:8, _:64, P:8, _:64, P:8, _:64, P:8, _/binary>>, P) -> true;
win_875(<<_:72, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_875(<<_:72, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _/binary>>, P) -> true;
win_875(<<_:72, P:8, _:64, P:8, _:64, P:8, _:64, P:8, _:64, P:8, _/binary>>, P) -> true;
win_875(<<_:80, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_875(<<_:80, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _/binary>>, P) -> true;
win_875(<<_:80, P:8, _:64, P:8, _:64, P:8, _:64, P:8, _:64, P:8, _/binary>>, P) -> true;
win_875(<<_:88, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_875(<<_:88, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _/binary>>, P) -> true;
win_875(<<_:88, P:8, _:64, P:8, _:64, P:8, _:64, P:8, _:64, P:8, _/binary>>, P) -> true;
win_875(<<_:96, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _/binary>>, P) -> true;
win_875(<<_:96, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _/binary>>, P) -> true;
win_875(<<_:104, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _/binary>>, P) -> true;
win_875(<<_:104, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _/binary>>, P) -> true;
win_875(<<_:112, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _/binary>>, P) -> true;
win_875(<<_:112, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _/binary>>, P) -> true;
win_875(<<_:120, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _/binary>>, P) -> true;
win_875(<<_:120, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _/binary>>, P) -> true;
win_875(<<_:128, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_875(<<_:128, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _/binary>>, P) -> true;
win_875(<<_:128, P:8, _:64, P:8, _:64, P:8, _:64, P:8, _:64, P:8, _/binary>>, P) -> true;
win_875(<<_:136, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_875(<<_:136, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _/binary>>, P) -> true;
win_875(<<_:136, P:8, _:64, P:8, _:64, P:8, _:64, P:8, _:64, P:8, _/binary>>, P) -> true;
win_875(<<_:144, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_875(<<_:144, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _/binary>>, P) -> true;
win_875(<<_:144, P:8, _:64, P:8, _:64, P:8, _:64, P:8, _:64, P:8, _/binary>>, P) -> true;
win_875(<<_:152, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_875(<<_:152, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _/binary>>, P) -> true;
win_875(<<_:152, P:8, _:64, P:8, _:64, P:8, _:64, P:8, _:64, P:8, _/binary>>, P) -> true;
win_875(<<_:160, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _/binary>>, P) -> true;
win_875(<<_:160, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _/binary>>, P) -> true;
win_875(<<_:168, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _/binary>>, P) -> true;
win_875(<<_:168, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _/binary>>, P) -> true;
win_875(<<_:176, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _/binary>>, P) -> true;
win_875(<<_:176, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _/binary>>, P) -> true;
win_875(<<_:184, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _/binary>>, P) -> true;
win_875(<<_:184, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _/binary>>, P) -> true;
win_875(<<_:192, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_875(<<_:200, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_875(<<_:208, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_875(<<_:216, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_875(<<_:256, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_875(<<_:264, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_875(<<_:272, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_875(<<_:280, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_875(<<_:320, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_875(<<_:328, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_875(<<_:336, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_875(<<_:344, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_875(<<_:384, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_875(<<_:392, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_875(<<_:400, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_875(<<_:408, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_875(_, _) -> false.

win_876(<<P:8, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_876(<<P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _/binary>>, P) -> true;
win_876(<<P:8, _:64, P:8, _:64, P:8, _:64, P:8, _:64, P:8, _:64, P:8, _/binary>>, P) -> true;
win_876(<<_:8, P:8, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_876(<<_:8, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _/binary>>, P) -> true;
win_876(<<_:8, P:8, _:64, P:8, _:64, P:8, _:64, P:8, _:64, P:8, _:64, P:8, _/binary>>, P) -> true;
win_876(<<_:16, P:8, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_876(<<_:16, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _/binary>>, P) -> true;
win_876(<<_:16, P:8, _:64, P:8, _:64, P:8, _:64, P:8, _:64, P:8, _:64, P:8, _/binary>>, P) -> true;
win_876(<<_:24, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _/binary>>, P) -> true;
win_876(<<_:32, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _/binary>>, P) -> true;
win_876(<<_:40, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _/binary>>, P) -> true;
win_876(<<_:40, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _/binary>>, P) -> true;
win_876(<<_:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _/binary>>, P) -> true;
win_876(<<_:48, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _/binary>>, P) -> true;
win_876(<<_:56, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _/binary>>, P) -> true;
win_876(<<_:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _/binary>>, P) -> true;
win_876(<<_:64, P:8, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_876(<<_:64, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _/binary>>, P) -> true;
win_876(<<_:64, P:8, _:64, P:8, _:64, P:8, _:64, P:8, _:64, P:8, _:64, P:8, _/binary>>, P) -> true;
win_876(<<_:72, P:8, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_876(<<_:72, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _/binary>>, P) -> true;
win_876(<<_:72, P:8, _:64, P:8, _:64, P:8, _:64, P:8, _:64, P:8, _:64, P:8, _/binary>>, P) -> true;
win_876(<<_:80, P:8, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_876(<<_:80, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _/binary>>, P) -> true;
win_876(<<_:80, P:8, _:64, P:8, _:64, P:8, _:64, P:8, _:64, P:8, _:64, P:8, _/binary>>, P) -> true;
win_876(<<_:88, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _/binary>>, P) -> true;
win_876(<<_:96, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _/binary>>, P) -> true;
win_876(<<_:104, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _/binary>>, P) -> true;
win_876(<<_:104, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _/binary>>, P) -> true;
win_876(<<_:112, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _/binary>>, P) -> true;
win_876(<<_:112, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _/binary>>, P) -> true;
win_876(<<_:120, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _/binary>>, P) -> true;
win_876(<<_:120, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _/binary>>, P) -> true;
win_876(<<_:128, P:8, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_876(<<_:136, P:8, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_876(<<_:144, P:8, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_876(<<_:192, P:8, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_876(<<_:200, P:8, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_876(<<_:208, P:8, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_876(<<_:256, P:8, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_876(<<_:264, P:8, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_876(<<_:272, P:8, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_876(<<_:320, P:8, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_876(<<_:328, P:8, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_876(<<_:336, P:8, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_876(<<_:384, P:8, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_876(<<_:392, P:8, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_876(<<_:400, P:8, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_876(_, _) -> false.

win_877(<<P:8, P:8, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_877(<<P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _/binary>>, P) -> true;
win_877(<<P:8, _:64, P:8, _:64, P:8, _:64, P:8, _:64, P:8, _:64, P:8, _:64, P:8, _/binary>>, P) -> true;
win_877(<<_:8, P:8, P:8, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_877(<<_:8, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _/binary>>, P) -> true;
win_877(<<_:8, P:8, _:64, P:8, _:64, P:8, _:64, P:8, _:64, P:8, _:64, P:8, _:64, P:8, _/binary>>, P) -> true;
win_877(<<_:16, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _/binary>>, P) -> true;
win_877(<<_:24, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _/binary>>, P) -> true;
win_877(<<_:32, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _/binary>>, P) -> true;
win_877(<<_:40, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _/binary>>, P) -> true;
win_877(<<_:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _/binary>>, P) -> true;
win_877(<<_:48, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _/binary>>, P) -> true;
win_877(<<_:56, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _/binary>>, P) -> true;
win_877(<<_:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _/binary>>, P) -> true;
win_877(<<_:64, P:8, P:8, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_877(<<_:72, P:8, P:8, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_877(<<_:128, P:8, P:8, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_877(<<_:136, P:8, P:8, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_877(<<_:192, P:8, P:8, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_877(<<_:200, P:8, P:8, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_877(<<_:256, P:8, P:8, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_877(<<_:264, P:8, P:8, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_877(<<_:320, P:8, P:8, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_877(<<_:328, P:8, P:8, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_877(<<_:384, P:8, P:8, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_877(<<_:392, P:8, P:8, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_877(_, _) -> false.

win_885(<<P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_885(<<P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _/binary>>, P) -> true;
win_885(<<P:8, _:64, P:8, _:64, P:8, _:64, P:8, _:64, P:8, _/binary>>, P) -> true;
win_885(<<_:8, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_885(<<_:8, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _/binary>>, P) -> true;
win_885(<<_:8, P:8, _:64, P:8, _:64, P:8, _:64, P:8, _:64, P:8, _/binary>>, P) -> true;
win_885(<<_:16, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_885(<<_:16, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _/binary>>, P) -> true;
win_885(<<_:16, P:8, _:64, P:8, _:64, P:8, _:64, P:8, _:64, P:8, _/binary>>, P) -> true;
win_885(<<_:24, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_885(<<_:24, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _/binary>>, P) -> true;
win_885(<<_:24, P:8, _:64, P:8, _:64, P:8, _:64, P:8, _:64, P:8, _/binary>>, P) -> true;
win_885(<<_:32, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _/binary>>, P) -> true;
win_885(<<_:32, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _/binary>>, P) -> true;
win_885(<<_:40, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _/binary>>, P) -> true;
win_885(<<_:40, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _/binary>>, P) -> true;
win_885(<<_:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _/binary>>, P) -> true;
win_885(<<_:48, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _/binary>>, P) -> true;
win_885(<<_:56, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _/binary>>, P) -> true;
win_885(<<_:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _/binary>>, P) -> true;
win_885(<<_:64, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_885(<<_:64, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _/binary>>, P) -> true;
win_885(<<_:64, P:8, _:64, P:8, _:64, P:8, _:64, P:8, _:64, P:8, _/binary>>, P) -> true;
win_885(<<_:72, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_885(<<_:72, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _/binary>>, P) -> true;
win_885(<<_:72, P:8, _:64, P:8, _:64, P:8, _:64, P:8, _:64, P:8, _/binary>>, P) -> true;
win_885(<<_:80, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_885(<<_:80, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _/binary>>, P) -> true;
win_885(<<_:80, P:8, _:64, P:8, _:64, P:8, _:64, P:8, _:64, P:8, _/binary>>, P) -> true;
win_885(<<_:88, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_885(<<_:88, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _/binary>>, P) -> true;
win_885(<<_:88, P:8, _:64, P:8, _:64, P:8, _:64, P:8, _:64, P:8, _/binary>>, P) -> true;
win_885(<<_:96, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _/binary>>, P) -> true;
win_885(<<_:96, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _/binary>>, P) -> true;
win_885(<<_:104, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _/binary>>, P) -> true;
win_885(<<_:104, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _/binary>>, P) -> true;
win_885(<<_:112, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _/binary>>, P) -> true;
win_885(<<_:112, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _/binary>>, P) -> true;
win_885(<<_:120, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _/binary>>, P) -> true;
win_885(<<_:120, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _/binary>>, P) -> true;
win_885(<<_:128, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_885(<<_:128, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _/binary>>, P) -> true;
win_885(<<_:128, P:8, _:64, P:8, _:64, P:8, _:64, P:8, _:64, P:8, _/binary>>, P) -> true;
win_885(<<_:136, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_885(<<_:136, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _/binary>>, P) -> true;
win_885(<<_:136, P:8, _:64, P:8, _:64, P:8, _:64, P:8, _:64, P:8, _/binary>>, P) -> true;
win_885(<<_:144, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_885(<<_:144, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _/binary>>, P) -> true;
win_885(<<_:144, P:8, _:64, P:8, _:64, P:8, _:64, P:8, _:64, P:8, _/binary>>, P) -> true;
win_885(<<_:152, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_885(<<_:152, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _/binary>>, P) -> true;
win_885(<<_:152, P:8, _:64, P:8, _:64, P:8, _:64, P:8, _:64, P:8, _/binary>>, P) -> true;
win_885(<<_:160, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _/binary>>, P) -> true;
win_885(<<_:160, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _/binary>>, P) -> true;
win_885(<<_:168, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _/binary>>, P) -> true;
win_885(<<_:168, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _/binary>>, P) -> true;
win_885(<<_:176, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _/binary>>, P) -> true;
win_885(<<_:176, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _/binary>>, P) -> true;
win_885(<<_:184, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _/binary>>, P) -> true;
win_885(<<_:184, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _/binary>>, P) -> true;
win_885(<<_:192, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_885(<<_:192, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _/binary>>, P) -> true;
win_885(<<_:192, P:8, _:64, P:8, _:64, P:8, _:64, P:8, _:64, P:8, _/binary>>, P) -> true;
win_885(<<_:200, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_885(<<_:200, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _/binary>>, P) -> true;
win_885(<<_:200, P:8, _:64, P:8, _:64, P:8, _:64, P:8, _:64, P:8, _/binary>>, P) -> true;
win_885(<<_:208, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_885(<<_:208, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _/binary>>, P) -> true;
win_885(<<_:208, P:8, _:64, P:8, _:64, P:8, _:64, P:8, _:64, P:8, _/binary>>, P) -> true;
win_885(<<_:216, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_885(<<_:216, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _/binary>>, P) -> true;
win_885(<<_:216, P:8, _:64, P:8, _:64, P:8, _:64, P:8, _:64, P:8, _/binary>>, P) -> true;
win_885(<<_:224, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _/binary>>, P) -> true;
win_885(<<_:224, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _/binary>>, P) -> true;
win_885(<<_:232, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _/binary>>, P) -> true;
win_885(<<_:232, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _/binary>>, P) -> true;
win_885(<<_:240, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _/binary>>, P) -> true;
win_885(<<_:240, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _/binary>>, P) -> true;
win_885(<<_:248, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _/binary>>, P) -> true;
win_885(<<_:248, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _/binary>>, P) -> true;
win_885(<<_:256, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_885(<<_:264, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_885(<<_:272, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_885(<<_:280, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_885(<<_:320, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_885(<<_:328, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_885(<<_:336, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_885(<<_:344, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_885(<<_:384, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_885(<<_:392, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_885(<<_:400, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_885(<<_:408, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_885(<<_:448, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_885(<<_:456, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_885(<<_:464, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_885(<<_:472, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_885(_, _) -> false.

win_886(<<P:8, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_886(<<P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _/binary>>, P) -> true;
win_886(<<P:8, _:64, P:8, _:64, P:8, _:64, P:8, _:64, P:8, _:64, P:8, _/binary>>, P) -> true;
win_886(<<_:8, P:8, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_886(<<_:8, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _/binary>>, P) -> true;
win_886(<<_:8, P:8, _:64, P:8, _:64, P:8, _:64, P:8, _:64, P:8, _:64, P:8, _/binary>>, P) -> true;
win_886(<<_:16, P:8, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_886(<<_:16, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _/binary>>, P) -> true;
win_886(<<_:16, P:8, _:64, P:8, _:64, P:8, _:64, P:8, _:64, P:8, _:64, P:8, _/binary>>, P) -> true;
win_886(<<_:24, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _/binary>>, P) -> true;
win_886(<<_:32, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _/binary>>, P) -> true;
win_886(<<_:40, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _/binary>>, P) -> true;
win_886(<<_:40, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _/binary>>, P) -> true;
win_886(<<_:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _/binary>>, P) -> true;
win_886(<<_:48, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _/binary>>, P) -> true;
win_886(<<_:56, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _/binary>>, P) -> true;
win_886(<<_:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _/binary>>, P) -> true;
win_886(<<_:64, P:8, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_886(<<_:64, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _/binary>>, P) -> true;
win_886(<<_:64, P:8, _:64, P:8, _:64, P:8, _:64, P:8, _:64, P:8, _:64, P:8, _/binary>>, P) -> true;
win_886(<<_:72, P:8, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_886(<<_:72, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _/binary>>, P) -> true;
win_886(<<_:72, P:8, _:64, P:8, _:64, P:8, _:64, P:8, _:64, P:8, _:64, P:8, _/binary>>, P) -> true;
win_886(<<_:80, P:8, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_886(<<_:80, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _/binary>>, P) -> true;
win_886(<<_:80, P:8, _:64, P:8, _:64, P:8, _:64, P:8, _:64, P:8, _:64, P:8, _/binary>>, P) -> true;
win_886(<<_:88, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _/binary>>, P) -> true;
win_886(<<_:96, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _/binary>>, P) -> true;
win_886(<<_:104, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _/binary>>, P) -> true;
win_886(<<_:104, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _/binary>>, P) -> true;
win_886(<<_:112, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _/binary>>, P) -> true;
win_886(<<_:112, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _/binary>>, P) -> true;
win_886(<<_:120, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _/binary>>, P) -> true;
win_886(<<_:120, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _/binary>>, P) -> true;
win_886(<<_:128, P:8, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_886(<<_:128, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _/binary>>, P) -> true;
win_886(<<_:128, P:8, _:64, P:8, _:64, P:8, _:64, P:8, _:64, P:8, _:64, P:8, _/binary>>, P) -> true;
win_886(<<_:136, P:8, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_886(<<_:136, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _/binary>>, P) -> true;
win_886(<<_:136, P:8, _:64, P:8, _:64, P:8, _:64, P:8, _:64, P:8, _:64, P:8, _/binary>>, P) -> true;
win_886(<<_:144, P:8, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_886(<<_:144, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _/binary>>, P) -> true;
win_886(<<_:144, P:8, _:64, P:8, _:64, P:8, _:64, P:8, _:64, P:8, _:64, P:8, _/binary>>, P) -> true;
win_886(<<_:152, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _/binary>>, P) -> true;
win_886(<<_:160, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _/binary>>, P) -> true;
win_886(<<_:168, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _/binary>>, P) -> true;
win_886(<<_:168, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _/binary>>, P) -> true;
win_886(<<_:176, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _/binary>>, P) -> true;
win_886(<<_:176, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _/binary>>, P) -> true;
win_886(<<_:184, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _/binary>>, P) -> true;
win_886(<<_:184, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _/binary>>, P) -> true;
win_886(<<_:192, P:8, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_886(<<_:200, P:8, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_886(<<_:208, P:8, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_886(<<_:256, P:8, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_886(<<_:264, P:8, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_886(<<_:272, P:8, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_886(<<_:320, P:8, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_886(<<_:328, P:8, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_886(<<_:336, P:8, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_886(<<_:384, P:8, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_886(<<_:392, P:8, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_886(<<_:400, P:8, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_886(<<_:448, P:8, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_886(<<_:456, P:8, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_886(<<_:464, P:8, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_886(_, _) -> false.

win_887(<<P:8, P:8, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_887(<<P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _/binary>>, P) -> true;
win_887(<<P:8, _:64, P:8, _:64, P:8, _:64, P:8, _:64, P:8, _:64, P:8, _:64, P:8, _/binary>>, P) -> true;
win_887(<<_:8, P:8, P:8, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_887(<<_:8, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _/binary>>, P) -> true;
win_887(<<_:8, P:8, _:64, P:8, _:64, P:8, _:64, P:8, _:64, P:8, _:64, P:8, _:64, P:8, _/binary>>, P) -> true;
win_887(<<_:16, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _/binary>>, P) -> true;
win_887(<<_:24, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _/binary>>, P) -> true;
win_887(<<_:32, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _/binary>>, P) -> true;
win_887(<<_:40, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _/binary>>, P) -> true;
win_887(<<_:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _/binary>>, P) -> true;
win_887(<<_:48, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _/binary>>, P) -> true;
win_887(<<_:56, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _/binary>>, P) -> true;
win_887(<<_:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _/binary>>, P) -> true;
win_887(<<_:64, P:8, P:8, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_887(<<_:64, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _/binary>>, P) -> true;
win_887(<<_:64, P:8, _:64, P:8, _:64, P:8, _:64, P:8, _:64, P:8, _:64, P:8, _:64, P:8, _/binary>>, P) -> true;
win_887(<<_:72, P:8, P:8, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_887(<<_:72, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _/binary>>, P) -> true;
win_887(<<_:72, P:8, _:64, P:8, _:64, P:8, _:64, P:8, _:64, P:8, _:64, P:8, _:64, P:8, _/binary>>, P) -> true;
win_887(<<_:80, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _/binary>>, P) -> true;
win_887(<<_:88, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _/binary>>, P) -> true;
win_887(<<_:96, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _/binary>>, P) -> true;
win_887(<<_:104, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _/binary>>, P) -> true;
win_887(<<_:112, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _/binary>>, P) -> true;
win_887(<<_:112, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _/binary>>, P) -> true;
win_887(<<_:120, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _/binary>>, P) -> true;
win_887(<<_:120, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _/binary>>, P) -> true;
win_887(<<_:128, P:8, P:8, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_887(<<_:136, P:8, P:8, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_887(<<_:192, P:8, P:8, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_887(<<_:200, P:8, P:8, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_887(<<_:256, P:8, P:8, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_887(<<_:264, P:8, P:8, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_887(<<_:320, P:8, P:8, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_887(<<_:328, P:8, P:8, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_887(<<_:384, P:8, P:8, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_887(<<_:392, P:8, P:8, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_887(<<_:448, P:8, P:8, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_887(<<_:456, P:8, P:8, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_887(_, _) -> false.

win_888(<<P:8, P:8, P:8, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_888(<<P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _/binary>>, P) -> true;
win_888(<<P:8, _:64, P:8, _:64, P:8, _:64, P:8, _:64, P:8, _:64, P:8, _:64, P:8, _:64, P:8, _/binary>>, P) -> true;
win_888(<<_:8, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _/binary>>, P) -> true;
win_888(<<_:16, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _/binary>>, P) -> true;
win_888(<<_:24, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _/binary>>, P) -> true;
win_888(<<_:32, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _/binary>>, P) -> true;
win_888(<<_:40, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _/binary>>, P) -> true;
win_888(<<_:48, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _/binary>>, P) -> true;
win_888(<<_:56, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _:48, P:8, _/binary>>, P) -> true;
win_888(<<_:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _:56, P:8, _/binary>>, P) -> true;
win_888(<<_:64, P:8, P:8, P:8, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_888(<<_:128, P:8, P:8, P:8, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_888(<<_:192, P:8, P:8, P:8, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_888(<<_:256, P:8, P:8, P:8, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_888(<<_:320, P:8, P:8, P:8, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_888(<<_:384, P:8, P:8, P:8, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_888(<<_:448, P:8, P:8, P:8, P:8, P:8, P:8, P:8, P:8, _/binary>>, P) -> true;
win_888(_, _) -> false.
